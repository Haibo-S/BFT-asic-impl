Using ABC speed script.
Extracting clock period from SDC file: ./results/asap7/credit-pi-switch-top/base/clock_period.txt
Setting clock period to 1000
1. Executing Liberty frontend: ./objects/asap7/credit-pi-switch-top/base/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib
2. Executing Liberty frontend: ./objects/asap7/credit-pi-switch-top/base/lib/asap7sc7p5t_INVBUF_RVT_FF_nldm_220122.lib
3. Executing Liberty frontend: ./objects/asap7/credit-pi-switch-top/base/lib/asap7sc7p5t_OA_RVT_FF_nldm_211120.lib
4. Executing Liberty frontend: ./objects/asap7/credit-pi-switch-top/base/lib/asap7sc7p5t_SIMPLE_RVT_FF_nldm_211120.lib
5. Executing Liberty frontend: ./objects/asap7/credit-pi-switch-top/base/lib/asap7sc7p5t_SEQ_RVT_FF_nldm_220123.lib
6. Executing Liberty frontend: ./objects/asap7/credit-pi-switch-top/base/lib/asap7sc7p5t_AO_RVT_FF_nldm_211120.lib
7. Executing Liberty frontend: ./objects/asap7/credit-pi-switch-top/base/lib/asap7sc7p5t_INVBUF_RVT_FF_nldm_220122.lib
8. Executing Liberty frontend: ./objects/asap7/credit-pi-switch-top/base/lib/asap7sc7p5t_OA_RVT_FF_nldm_211120.lib
9. Executing Liberty frontend: ./objects/asap7/credit-pi-switch-top/base/lib/asap7sc7p5t_SIMPLE_RVT_FF_nldm_211120.lib
10. Executing Liberty frontend: ./objects/asap7/credit-pi-switch-top/base/lib/asap7sc7p5t_SEQ_RVT_FF_nldm_220123.lib
11. Executing Verilog-2005 frontend: /home/h3sun/720-noc-project/OpenROAD-flow-scripts/flow/designs/src/credit-pi-switch-top/merged.v
12. Executing Verilog-2005 frontend: /home/h3sun/720-noc-project/OpenROAD-flow-scripts/flow/designs/src/credit-pi-switch-top/mux.v
13. Executing Verilog-2005 frontend: /home/h3sun/720-noc-project/OpenROAD-flow-scripts/flow/platforms/asap7/yoSys/cells_clkgate_R.v
14. Executing HIERARCHY pass (managing design hierarchy).
15. Executing AST frontend in derive mode using pre-parsed AST for module `\credit_pi_switch_wrap'.
15.1. Analyzing design hierarchy..
15.2. Executing AST frontend in derive mode using pre-parsed AST for module `\credit_pi_switch'.
15.3. Executing AST frontend in derive mode using pre-parsed AST for module `\fifo32'.
15.4. Analyzing design hierarchy..
15.5. Executing AST frontend in derive mode using pre-parsed AST for module `\mux'.
15.6. Executing AST frontend in derive mode using pre-parsed AST for module `\mux'.
15.7. Executing AST frontend in derive mode using pre-parsed AST for module `\credit_pi_route'.
15.8. Analyzing design hierarchy..
15.9. Executing AST frontend in derive mode using pre-parsed AST for module `\credit_counters_tx'.
15.10. Analyzing design hierarchy..
15.11. Analyzing design hierarchy..
16. Executing OPT_CLEAN pass (remove unused cells and wires).
Warning: Ignoring module $paramod$e2258cd77228d23a482c9429efb2427c7bdf9db9\fifo32 because it contains processes (run 'proc' command first).
Warning: Ignoring module credit_pi_switch_wrap because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod$6be54c79259c774d4d83cb2b1a30b8be65c0bb52\credit_counters_tx because it contains processes (run 'proc' command first).
Warning: Ignoring module $paramod$98abe632bbd6ab59fd0fa31c4844620fd03b670d\credit_pi_route because it contains processes (run 'proc' command first).
17. Executing RTLIL backend.
Warnings: 4 unique messages, 4 total
End of script. Logfile hash: 2620aa787a, CPU: user 0.27s system 0.03s, MEM: 75.75 MB peak
Yosys 0.53 (git sha1 53c22ab7c, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3)
Time spent: 88% 12x read_liberty (0 sec), 6% 1x hierarchy (0 sec), ...
Elapsed time: 0:00.45[h:]min:sec. CPU time: user 0.30 sys 0.03 (74%). Peak memory: 80448KB.
